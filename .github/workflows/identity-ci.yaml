name: identity-ci
on:
  pull_request:
    branches:
      - dev
    paths:
      - 'identity-service/**'

env:
  SERVICE_NAME: identity-service
  CLIENT-SECRET: ${{ secrets.CLIENT_SECRET }}
  GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY}}
  SERVICE_ACCOUNT_KEY_BACK_UP: ${{ secrets.SERVICE_ACCOUNT_KEY_BACK_UP }}
  JAVA_VERSION: '17'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup JDK 21
      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'corretto'

      # Step 3: Create Configuration Files
      - name: Create Configuration Files
        working-directory: ${{ env.SERVICE_NAME }}
        run: |
          echo "${{ secrets.CLIENT-SECRET }}" > src/main/resources/client-secret.json
          echo "${{ secrets.GOOGLE_SERVICES }}" > src/main/resources/google-services.json
          echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" > src/main/resources/serviceAccountKey.json
          echo "${{ secrets.SERVICE_ACCOUNT_KEY_BACK_UP }}" > src/main/resources/serviceAccountKey_back_up.json

      # Step 4: Cache SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Step 4: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 5: fetch dependencies
      - name: Fetch Dependencies
        working-directory: ${{ env.SERVICE_NAME }}
        run: ./gradlew dependencies

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
#      # Step 6: Build the project using Gradle
#      - name: Build with Gradle
#        working-directory: ${{ env.SERVICE_NAME }}
#        run: ./gradlew build
#
#      # Step 7: Notify success or failure
#      - name: Build Success Notification
#        if: success()
#        run: echo "Build was successful!"
#
#      - name: Build Failure Notification
#        if: failure()
#        run: echo "Build failed!"